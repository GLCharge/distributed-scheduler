version: '3'

services:

  migration:
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: build/manager/Dockerfile
    command:
      - "/app/tooling"
      - "migrate"
      - "--user=scheduler"
      - "--host=postgres:5432"
      - "--pass=scheduler"
      - "--name=scheduler"

  manager:
    build:
      context: .
      dockerfile: build/manager/Dockerfile
    container_name: manager
    restart: always
    ports:
      - "8000:8000"
    environment:
      - MANAGER_DB_HOST=postgres:5432
    depends_on:
      - postgres
      - migration
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  runner:
    build:
      context: .
      dockerfile: build/runner/Dockerfile
    container_name: runner
    restart: always
    environment:
      - RUNNER_DB_HOST=postgres:5432
    depends_on:
      - postgres
      - migration

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: scheduler
      POSTGRES_PASSWORD: scheduler
      POSTGRES_DB: scheduler
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_ERLANG_COOKIE: 'rabbitmq_cookie'
      RABBITMQ_DEFAULT_USER: 'guest'
      RABBITMQ_DEFAULT_PASS: 'guest'

volumes:
  pgdata: